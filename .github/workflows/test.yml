name: Palace of Quests - Run Tests and Build

on:
  push:
    branches:
      - main

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db

    steps:
    # Step 1: Check out the code from the repository
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    # Step 3: Cache Python dependencies
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 4: Install Python dependencies
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt

    # Step 5: Run Python tests and coverage
    - name: Run tests
      run: |
        pytest --disable-warnings --cov=app

    # Step 6: Upload coverage report
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

    # Step 7: Set up Node.js environment for React frontend
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16 # Specify the required Node.js version

    # Step 8: Cache Node.js dependencies
    - name: Cache Node.js dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          ~/.yarn/cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 9: Install Node.js dependencies for the frontend
    - name: Install Node.js dependencies
      run: |
        npm install

    # Step 10: Build React frontend
    - name: Build frontend
      run: |
        npm run build

    # Step 11: Upload build artifacts
    - name: Upload frontend build artifact
      uses: actions/upload-artifact@v3
      with:
        name: palace-of-quests-build
        path: build/ # Replace `build/` with your actual output directory
